{"mappings":"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","sources":["<anon>","js/script.js","js/constants.js","js/api.js","js/uiManagement.js","assets/data/content.json","js/utils.js","js/quizManagement.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nconst $0549f5aaef62b2d2$export$d675b3969e4857cb = document.getElementById('submit-button');\nconst $0549f5aaef62b2d2$export$c11717e3f1c52cf6 = document.getElementById('answers-section');\nconst $0549f5aaef62b2d2$export$b4bb76d1f78cbcea = document.getElementById('tutorial-section');\nconst $0549f5aaef62b2d2$export$16cdf0d7feb4a0fd = document.getElementById('results-section');\nconst $0549f5aaef62b2d2$export$46e4a324ac90507f = document.getElementById('heading');\nconst $0549f5aaef62b2d2$export$27e9b478d743ba2b = 10;\nconst $0549f5aaef62b2d2$export$73c6fd56b5ab9afe = 80;\n\n\n\nconst $73936c209f170d43$export$7f972a3e1c55592f = async (difficulty)=>{\n    const difficultyUrlParam = difficulty === 'mixed' ? '' : `&difficulty=${difficulty}`;\n    // Record time right before fetch (to handle the limitation of 1 request every 5 seconds)\n    localStorage.setItem('fetchTime', new Date());\n    try {\n        // Fetch based on selected difficulty using url parameter\n        const result = await fetch(`https://opentdb.com/api.php?amount=${(0, $0549f5aaef62b2d2$export$27e9b478d743ba2b)}&category=12&type=multiple${difficultyUrlParam}`);\n        const json = await result.json();\n        return json;\n    } catch (error) {\n        // Handling data fetch error\n        alert('Failed to fetch questions from Open Trivia Database. Refresh and try again');\n        console.error('Failed to fetch data with Trivia API', error);\n    }\n};\nconst $73936c209f170d43$export$a1f999b7bd8ac1f5 = 5000; //ms\n\n\nvar $7d390c0492ceea3f$exports = {};\n$7d390c0492ceea3f$exports = JSON.parse(\"{\\\"siteTitle\\\":\\\"a music quiz\\\",\\\"author\\\":\\\"Tudor Popescu\\\",\\\"description\\\":\\\"Music quiz for audiophiles to test their knowledge.\\\",\\\"keywords\\\":\\\"Music Quiz. Music. Music trivia. Quiz.\\\",\\\"difficulties\\\":[\\\"mixed\\\",\\\"easy\\\",\\\"medium\\\",\\\"hard\\\"],\\\"tutorialSteps\\\":[\\\"There are 10 questions\\\",\\\"Each question values 1 point\\\",\\\"Maximum score is 10\\\",\\\"Choose difficulty\\\"]}\");\n\n\n// Decode html entities present in data (function learnt from chatGPT)\nconst $08fa37fff71de28c$export$5cfeaa4af6841c8f = (str)=>{\n    const parser = new DOMParser();\n    const decoded = parser.parseFromString(str, 'text/html').body.textContent;\n    return decoded;\n};\nconst $08fa37fff71de28c$export$448332262467e042 = (array)=>{\n    for(let i = array.length - 1; i > 0; i--){\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [\n            array[j],\n            array[i]\n        ];\n    }\n    return array;\n};\nconst $08fa37fff71de28c$export$1839ba460459a826 = (string)=>{\n    return string[0].toUpperCase() + string.slice(1);\n};\n\n\nconst $221d103b0f3fc88a$export$e36ea31c04f6f4c9 = ()=>{\n    // Populate site title, header, footer\n    document.getElementById('title').innerText = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).siteTitle;\n    document.getElementById('header-title').innerText = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).siteTitle;\n    document.getElementById('footer-title').innerText = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).siteTitle;\n    // Populate meta tags with content\n    const metaTags = document.getElementsByTagName('meta');\n    for (let tag of metaTags){\n        if (tag.name === 'author') tag.content = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).author;\n        if (tag.name === 'description') tag.content = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).description;\n        if (tag.name === 'keywords') tag.content = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).keywords;\n    }\n    // Populate tutorial\n    for(let i = 0; i <= 3; i++){\n        const li = document.createElement('li');\n        li.innerText = (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).tutorialSteps[i];\n        document.getElementById('tutorial-steps').appendChild(li);\n    }\n    // Populate answer buttons\n    for(let i = 0; i <= 3; i++){\n        const button = document.createElement('button');\n        button.setAttribute('id', `answer-${i}`);\n        document.getElementById('answers-section').appendChild(button);\n    }\n    // Populate difficulty buttons\n    for(let i = 0; i < (0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).difficulties.length; i++){\n        const button = document.createElement('button');\n        button.setAttribute('id', `difficulty-${i}`);\n        button.innerText = (0, $08fa37fff71de28c$export$1839ba460459a826)((0, (/*@__PURE__*/$parcel$interopDefault($7d390c0492ceea3f$exports))).difficulties[i]);\n        if (i === 0) button.classList.add('selected');\n        document.getElementById('select-difficulty').appendChild(button);\n    }\n};\nconst $221d103b0f3fc88a$export$af068a137c14e57e = ()=>{\n    for(let i = 0; i <= 3; i++)document.getElementById(`answer-${i}`).classList.add('disabled');\n};\nconst $221d103b0f3fc88a$export$855675447ae9024f = ()=>{\n    for(let i = 0; i <= 3; i++)document.getElementById(`answer-${i}`).classList.remove('disabled');\n};\nconst $221d103b0f3fc88a$export$7411639aeb86346d = ()=>{\n    // Make main's border red\n    document.getElementById('main').classList.add('red');\n    // Make note symbols red\n    const symbols = document.getElementsByClassName('symbol');\n    for (let symbol of symbols)symbol.src = 'assets/images/musicquiz-red.png';\n    // Make quiz title red\n    const titles = document.getElementsByClassName('title');\n    for (let title of titles)title.classList.add('red');\n};\nconst $221d103b0f3fc88a$export$678377686716f801 = ()=>{\n    document.getElementById('main').classList.remove('red');\n    // Revert note symbols to green\n    const symbols = document.getElementsByClassName('symbol');\n    for (let symbol of symbols)symbol.src = 'assets/images/musicquiz-green.png';\n    // Revert quiz title\n    const titles = document.getElementsByClassName('title');\n    for (let title of titles)title.classList.remove('red');\n};\nconst $221d103b0f3fc88a$export$bfa134de10c25d69 = (selectedDifficultyIdx)=>{\n    for(let i = 0; i <= 3; i++)if (i !== selectedDifficultyIdx) document.getElementById(`difficulty-${i}`).classList.remove('selected');\n};\n\n\n\n\n\n\nconst $6318dfeb70c9f1eb$export$35dfb1dce4536b10 = async (difficulty)=>{\n    // Fetch questions from Trivia API\n    const data = await (0, $73936c209f170d43$export$7f972a3e1c55592f)(difficulty);\n    // Update submit button\n    (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Next';\n    // Hide the tutorial\n    (0, $0549f5aaef62b2d2$export$b4bb76d1f78cbcea).classList.add('hidden');\n    // Show the first question\n    (0, $0549f5aaef62b2d2$export$c11717e3f1c52cf6).classList.remove('hidden');\n    return data;\n};\nconst $6318dfeb70c9f1eb$export$85787429b4cb5fd8 = (score)=>{\n    // Update heading to results\n    (0, $0549f5aaef62b2d2$export$46e4a324ac90507f).innerText = 'You scored';\n    // Hide answers section, display results section\n    (0, $0549f5aaef62b2d2$export$c11717e3f1c52cf6).classList.add('hidden');\n    (0, $0549f5aaef62b2d2$export$16cdf0d7feb4a0fd).classList.remove('hidden');\n    // Display score\n    document.getElementById('score').innerText = score + ` point${score > 1 ? 's' : ''}`;\n    // Update submit button\n    (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Restart quiz';\n};\nconst $6318dfeb70c9f1eb$export$12698bc319dcbbdd = (data, questionCount)=>{\n    // Get question object from data\n    const questionObject = data.results[questionCount];\n    // Update heading with question text (function learnt from chatGPT)\n    const questionText = (0, $08fa37fff71de28c$export$5cfeaa4af6841c8f)(questionObject.question);\n    (0, $0549f5aaef62b2d2$export$46e4a324ac90507f).innerText = questionCount + 1 + '. ' + questionText;\n    if (questionText.length > (0, $0549f5aaef62b2d2$export$73c6fd56b5ab9afe)) document.getElementById('heading').classList.add('shrink');\n    // Populate answer buttons, randomising the placement of the correct answer\n    // Shuffle answers\n    let answers = (0, $08fa37fff71de28c$export$448332262467e042)([\n        ...questionObject.incorrect_answers,\n        questionObject.correct_answer\n    ]);\n    let correctAnswerIdx = -1;\n    for(let i = 0; i <= 3; i++){\n        const answerButton = document.getElementById(`answer-${i}`);\n        // Reset answer button status\n        answerButton.classList.remove('correct', 'incorrect', 'selected');\n        // Save correct answer index\n        if (answers[i] === questionObject.correct_answer) correctAnswerIdx = i;\n        // Hide button if there are fewer than 4 answers provided\n        if (!answers[i]) answerButton.hidden = 'true';\n        // Populate text on button\n        answerButton.innerText = (0, $08fa37fff71de28c$export$5cfeaa4af6841c8f)(answers[i]);\n    }\n    // Re-enable all answer buttons\n    (0, $221d103b0f3fc88a$export$855675447ae9024f)();\n    // Disable submit button until user selects an answer\n    (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).classList.add('disabled');\n    // Change submit button to finish on last question\n    if (questionCount === (0, $0549f5aaef62b2d2$export$27e9b478d743ba2b) - 1) (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Finish';\n    return correctAnswerIdx;\n};\nconst $6318dfeb70c9f1eb$export$5d3d46fe3c6e86c0 = ()=>{\n    // Populate content to display the tutorial\n    (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Start';\n    (0, $0549f5aaef62b2d2$export$46e4a324ac90507f).innerText = 'How to play';\n    (0, $0549f5aaef62b2d2$export$16cdf0d7feb4a0fd).classList.add('hidden');\n    (0, $0549f5aaef62b2d2$export$b4bb76d1f78cbcea).classList.remove('hidden');\n};\n\n\nlet $63eb283d27decb4d$var$data = {};\nlet $63eb283d27decb4d$var$questionCount = 0;\nlet $63eb283d27decb4d$var$score = 0;\nlet $63eb283d27decb4d$var$correctAnswerIdx = null;\nlet $63eb283d27decb4d$var$difficulty = 'mixed';\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    (0, $221d103b0f3fc88a$export$e36ea31c04f6f4c9)();\n    // Making sure more than 5 seconds passed since the last data fetch\n    // Trivia API is limited at 1 fetch every 5 seconds\n    const msSinceLastFetch = new Date() - Date.parse(localStorage.getItem('fetchTime'));\n    if (msSinceLastFetch <= (0, $73936c209f170d43$export$a1f999b7bd8ac1f5)) {\n        // Disable submit button and display 'loading' while fetching data\n        (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).classList.add('disabled');\n        (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Loading...';\n        setTimeout(()=>{\n            // Enable submit button once the data was fetched\n            (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).classList.remove('disabled');\n            (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText = 'Start';\n        }, (0, $73936c209f170d43$export$a1f999b7bd8ac1f5) - msSinceLastFetch + 500);\n    }\n    // Handle click on the submitButton\n    (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).addEventListener('click', async ()=>{\n        // Don't do anything if button has the class disabled\n        if ((0, $0549f5aaef62b2d2$export$d675b3969e4857cb).classList.contains('disabled')) return;\n        if ($63eb283d27decb4d$var$questionCount === 0 || (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).innerText === 'Start') {\n            // Start quiz if questions count hasn't started\n            $63eb283d27decb4d$var$data = await (0, $6318dfeb70c9f1eb$export$35dfb1dce4536b10)($63eb283d27decb4d$var$difficulty);\n            // Populate question\n            $63eb283d27decb4d$var$correctAnswerIdx = (0, $6318dfeb70c9f1eb$export$12698bc319dcbbdd)($63eb283d27decb4d$var$data, $63eb283d27decb4d$var$questionCount);\n            $63eb283d27decb4d$var$questionCount += 1;\n        } else if ($63eb283d27decb4d$var$questionCount === (0, $0549f5aaef62b2d2$export$27e9b478d743ba2b)) {\n            // Finish quiz if question count is at the last question\n            (0, $6318dfeb70c9f1eb$export$85787429b4cb5fd8)($63eb283d27decb4d$var$score);\n            $63eb283d27decb4d$var$questionCount += 1;\n        } else if (!(0, $0549f5aaef62b2d2$export$16cdf0d7feb4a0fd).classList.contains('hidden')) {\n            // Restart quiz once results are displayed\n            (0, $6318dfeb70c9f1eb$export$5d3d46fe3c6e86c0)();\n            // Reset question count and score\n            $63eb283d27decb4d$var$score = 0;\n            $63eb283d27decb4d$var$questionCount = 0;\n        } else {\n            // Otherwise, go to next question\n            $63eb283d27decb4d$var$correctAnswerIdx = (0, $6318dfeb70c9f1eb$export$12698bc319dcbbdd)($63eb283d27decb4d$var$data, $63eb283d27decb4d$var$questionCount);\n            $63eb283d27decb4d$var$questionCount += 1;\n        }\n        // Reset red UI ever time submit button is clicked\n        (0, $221d103b0f3fc88a$export$678377686716f801)();\n    });\n    // Handle selecting an answer\n    for(let i = 0; i <= 3; i++){\n        const selectedAnswer = document.getElementById(`answer-${i}`);\n        selectedAnswer.addEventListener('click', ()=>{\n            // Check that button is not disabled (which is the case when an answer was already selected)\n            if (!selectedAnswer.classList.contains('disabled')) {\n                if (i === $63eb283d27decb4d$var$correctAnswerIdx) {\n                    selectedAnswer.classList.add('correct', 'selected');\n                    $63eb283d27decb4d$var$score += 1;\n                } else {\n                    selectedAnswer.classList.add('incorrect', 'selected');\n                    document.getElementById(`answer-${$63eb283d27decb4d$var$correctAnswerIdx}`).classList.add('correct');\n                    // Make more elements of the UI red to signal the wrong answer\n                    (0, $221d103b0f3fc88a$export$7411639aeb86346d)();\n                }\n                // Deactivate all other answer buttons, so a second answer can't be selected\n                (0, $221d103b0f3fc88a$export$af068a137c14e57e)();\n                // Activate submitButton to navigate to the next question\n                (0, $0549f5aaef62b2d2$export$d675b3969e4857cb).classList.remove('disabled');\n            }\n        });\n    }\n    // Handle selecting difficulty\n    for(let i = 0; i <= 3; i++){\n        const difficultyOption = document.getElementById(`difficulty-${i}`);\n        difficultyOption.addEventListener('click', ()=>{\n            difficultyOption.classList.add('selected');\n            // Deselect all other difficulties\n            (0, $221d103b0f3fc88a$export$bfa134de10c25d69)(i);\n            // Save selected difficulty\n            $63eb283d27decb4d$var$difficulty = difficultyOption.textContent.toLowerCase();\n        });\n    }\n});\n\n\n//# sourceMappingURL=index.6fdf7624.js.map\n","import { submitButton, MAX_QUESTION_NUM, resultsSection } from './constants.js';\nimport { MIN_FETCH_INTERVAL } from './api.js';\nimport { \n    deactivateAllAnswerButtons, deselectOtherDifficultyOptions,\n    makeUiRed, clearRedUi,\n    populateUI,  \n} from './uiManagement.js';\nimport { startQuiz, finishQuiz, restartQuiz, nextQuestion } from './quizManagement.js';\n\nlet data = {};\nlet questionCount = 0;\nlet score = 0;\nlet correctAnswerIdx = null;\nlet difficulty = 'mixed';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    populateUI();\n\n    // Making sure more than 5 seconds passed since the last data fetch\n    // Trivia API is limited at 1 fetch every 5 seconds\n    const msSinceLastFetch = new Date() - Date.parse(localStorage.getItem('fetchTime'));\n    if (msSinceLastFetch <= MIN_FETCH_INTERVAL) {\n        // Disable submit button and display 'loading' while fetching data\n        submitButton.classList.add('disabled');\n        submitButton.innerText = 'Loading...';\n        setTimeout(() => {\n            // Enable submit button once the data was fetched\n            submitButton.classList.remove('disabled');\n            submitButton.innerText = 'Start';\n        }, MIN_FETCH_INTERVAL - msSinceLastFetch + 500);\n    }\n\n    // Handle click on the submitButton\n    submitButton.addEventListener('click', async () => {\n        // Don't do anything if button has the class disabled\n        if (submitButton.classList.contains('disabled')) {\n            return;\n        }\n        if (questionCount === 0 || submitButton.innerText === 'Start') {\n            // Start quiz if questions count hasn't started\n            data = await startQuiz(difficulty);\n            // Populate question\n            correctAnswerIdx = nextQuestion(data, questionCount);\n            questionCount += 1;\n        } else if (questionCount === MAX_QUESTION_NUM) {\n            // Finish quiz if question count is at the last question\n            finishQuiz(score);\n            questionCount += 1;\n        } else if (!resultsSection.classList.contains('hidden')) {\n            // Restart quiz once results are displayed\n            restartQuiz();\n            // Reset question count and score\n            score = 0;\n            questionCount = 0;\n        } else {\n            // Otherwise, go to next question\n            correctAnswerIdx = nextQuestion(data, questionCount);\n            questionCount += 1;\n        }\n        // Reset red UI ever time submit button is clicked\n        clearRedUi();\n    });\n\n    // Handle selecting an answer\n    for (let i = 0; i <= 3; i++) {\n        const selectedAnswer = document.getElementById(`answer-${i}`);\n        selectedAnswer.addEventListener('click', () => {\n            // Check that button is not disabled (which is the case when an answer was already selected)\n            if (!selectedAnswer.classList.contains('disabled')) {\n                if (i === correctAnswerIdx) {\n                    selectedAnswer.classList.add('correct', 'selected');\n                    score += 1;\n                } else {\n                    selectedAnswer.classList.add('incorrect', 'selected');\n                    document.getElementById(`answer-${correctAnswerIdx}`).classList.add('correct');\n                    // Make more elements of the UI red to signal the wrong answer\n                    makeUiRed();\n                }\n                // Deactivate all other answer buttons, so a second answer can't be selected\n                deactivateAllAnswerButtons();\n                // Activate submitButton to navigate to the next question\n                submitButton.classList.remove('disabled');\n            }\n        });\n    }\n\n    // Handle selecting difficulty\n    for(let i = 0; i <= 3; i++) {\n        const difficultyOption = document.getElementById(`difficulty-${i}`);\n        difficultyOption.addEventListener('click', () => {\n            difficultyOption.classList.add('selected');\n            // Deselect all other difficulties\n            deselectOtherDifficultyOptions(i);\n            // Save selected difficulty\n            difficulty = difficultyOption.textContent.toLowerCase();\n        });\n    }\n});","export const submitButton = document.getElementById('submit-button');\nexport const answersSection = document.getElementById('answers-section');\nexport const tutorialSection = document.getElementById('tutorial-section');\nexport const resultsSection = document.getElementById('results-section');\nexport const heading = document.getElementById('heading');\n\nexport const MAX_QUESTION_NUM = 10;\nexport const LONG_QUESTION_LENGTH = 80;","import { MAX_QUESTION_NUM } from './constants.js';\n\nexport const fetchQuestionsFromTriviaAPI = async (difficulty) => {\n    const difficultyUrlParam = difficulty === 'mixed' ? '' : `&difficulty=${difficulty}`;\n    // Record time right before fetch (to handle the limitation of 1 request every 5 seconds)\n    localStorage.setItem('fetchTime', new Date());\n    try {\n        // Fetch based on selected difficulty using url parameter\n        const result = await fetch(`https://opentdb.com/api.php?amount=${MAX_QUESTION_NUM}&category=12&type=multiple${difficultyUrlParam}`);\n        const json = await result.json();\n        return json;\n    } catch (error) {\n        // Handling data fetch error\n        alert('Failed to fetch questions from Open Trivia Database. Refresh and try again');\n        console.error('Failed to fetch data with Trivia API', error);\n    }\n};\n\nexport const MIN_FETCH_INTERVAL = 5000; //ms","import content from '../assets/data/content.json' with { type: 'json' };\nimport { capitalise } from './utils.js';\n\nexport const populateUI = () => {\n    // Populate site title, header, footer\n    document.getElementById('title').innerText = content.siteTitle;\n    document.getElementById('header-title').innerText = content.siteTitle;\n    document.getElementById('footer-title').innerText = content.siteTitle;\n\n    // Populate meta tags with content\n    const metaTags = document.getElementsByTagName('meta');\n    for (let tag of metaTags) {\n        if (tag.name === 'author') { tag.content = content.author; }\n        if (tag.name === 'description') { tag.content = content.description; }\n        if (tag.name === 'keywords') { tag.content = content.keywords; }\n    }\n\n    // Populate tutorial\n    for (let i = 0; i<= 3; i++) {\n        const li = document.createElement('li');\n        li.innerText = content.tutorialSteps[i];\n        document.getElementById('tutorial-steps').appendChild(li);\n    }\n\n    // Populate answer buttons\n    for (let i = 0; i <= 3; i++) {\n        const button = document.createElement('button');\n        button.setAttribute('id', `answer-${i}`);\n        document.getElementById('answers-section').appendChild(button);\n    }\n\n    // Populate difficulty buttons\n    for (let i = 0; i < content.difficulties.length; i++) {\n        const button = document.createElement('button');\n        button.setAttribute('id', `difficulty-${i}`);\n        button.innerText = capitalise(content.difficulties[i]);\n        if (i === 0) {\n            button.classList.add('selected');\n        }\n        document.getElementById('select-difficulty').appendChild(button);\n    }\n}\n\n// Function to deactivate all answer buttons\nexport const deactivateAllAnswerButtons = () => {\n    for (let i = 0; i <= 3; i++) {\n        document.getElementById(`answer-${i}`).classList.add('disabled');\n    }\n};\n\n// Function to activate all answer buttons\nexport const activateAllAnswerButtons = () => {\n    for (let i = 0; i <= 3; i++) {\n        document.getElementById(`answer-${i}`).classList.remove('disabled');\n    }\n};\n\n// Function to make UI elements red to signal wrong answer\nexport const makeUiRed = () => {\n    // Make main's border red\n    document.getElementById('main').classList.add('red');\n    // Make note symbols red\n    const symbols = document.getElementsByClassName('symbol');\n    for (let symbol of symbols) {\n        symbol.src = 'assets/images/musicquiz-red.png';\n    }\n    // Make quiz title red\n    const titles = document.getElementsByClassName('title');\n    for (let title of titles) {\n        title.classList.add('red');\n    }\n};\n\n// Function to clear red UI elements when moving to a new question\nexport const clearRedUi = () => {\n    document.getElementById('main').classList.remove('red');\n    // Revert note symbols to green\n    const symbols = document.getElementsByClassName('symbol');\n    for (let symbol of symbols) {\n        symbol.src = 'assets/images/musicquiz-green.png';\n    }\n    // Revert quiz title\n    const titles = document.getElementsByClassName('title');\n    for (let title of titles) {\n        title.classList.remove('red');\n    }\n};\n\n// Function to deselect other difficulty options when selecting one\nexport const deselectOtherDifficultyOptions = (selectedDifficultyIdx) => {\n    for (let i = 0; i <= 3; i++) {\n        if (i !== selectedDifficultyIdx) {\n            document.getElementById(`difficulty-${i}`).classList.remove('selected');\n        }\n    }\n};","{\n    \"siteTitle\": \"a music quiz\",\n    \"author\": \"Tudor Popescu\",\n    \"description\": \"Music quiz for audiophiles to test their knowledge.\",\n    \"keywords\": \"Music Quiz. Music. Music trivia. Quiz.\",\n    \"difficulties\": [ \"mixed\", \"easy\", \"medium\", \"hard\" ],\n    \"tutorialSteps\": [\n        \"There are 10 questions\",\n        \"Each question values 1 point\",\n        \"Maximum score is 10\",\n        \"Choose difficulty\"\n    ]\n}","// Decode html entities present in data (function learnt from chatGPT)\nexport const decodeHtmlEntities = (str) => {\n    const parser = new DOMParser();\n    const decoded = parser.parseFromString(str, 'text/html').body.textContent;\n    return decoded;\n};\n\n// Function to shuffle array (Fisher Yates)\n// https://www.freecodecamp.org/news/how-to-shuffle-an-array-of-items-using-javascript-or-typescript/\nexport const shuffle = (array) => { \n  for (let i = array.length - 1; i > 0; i--) { \n    const j = Math.floor(Math.random() * (i + 1)); \n    [array[i], array[j]] = [array[j], array[i]]; \n  } \n  return array; \n}; \n\nexport const capitalise = (string) => {\n  return string[0].toUpperCase() + string.slice(1);\n}","import {\n    submitButton, heading,\n    tutorialSection, answersSection, resultsSection,\n    LONG_QUESTION_LENGTH, MAX_QUESTION_NUM,\n} from './constants.js';\nimport { fetchQuestionsFromTriviaAPI } from './api.js';\nimport { activateAllAnswerButtons } from './uiManagement.js';\nimport { decodeHtmlEntities, shuffle } from './utils.js';\n\n// Function to start quiz, from the tutorial page\nexport const startQuiz = async (difficulty) => {\n    // Fetch questions from Trivia API\n    const data = await fetchQuestionsFromTriviaAPI(difficulty);\n    // Update submit button\n    submitButton.innerText = 'Next';\n    // Hide the tutorial\n    tutorialSection.classList.add('hidden');\n    // Show the first question\n    answersSection.classList.remove('hidden');\n    return data;\n};\n\n// Function to finish last quiz question and view final score\nexport const finishQuiz = (score) => {\n    // Update heading to results\n    heading.innerText = 'You scored';\n    // Hide answers section, display results section\n    answersSection.classList.add('hidden');\n    resultsSection.classList.remove('hidden');\n    // Display score\n    document.getElementById('score').innerText = score + ` point${score > 1 ? 's' : ''}`;\n    // Update submit button\n    submitButton.innerText = 'Restart quiz';\n};\n\n// Function to populate the next question\nexport const nextQuestion = (data, questionCount) => {\n    // Get question object from data\n    const questionObject = data.results[questionCount];\n\n    // Update heading with question text (function learnt from chatGPT)\n    const questionText = decodeHtmlEntities(questionObject.question);\n    heading.innerText = (questionCount + 1) + '. ' + questionText;\n    if (questionText.length > LONG_QUESTION_LENGTH) {\n        document.getElementById('heading').classList.add('shrink');\n    }\n\n    // Populate answer buttons, randomising the placement of the correct answer\n    // Shuffle answers\n    let answers = shuffle([...questionObject.incorrect_answers, questionObject.correct_answer]);\n    let correctAnswerIdx = -1;\n    for (let i = 0; i <= 3; i++) {\n        const answerButton = document.getElementById(`answer-${i}`);\n        // Reset answer button status\n        answerButton.classList.remove('correct', 'incorrect', 'selected');\n        // Save correct answer index\n        if (answers[i] === questionObject.correct_answer) {\n            correctAnswerIdx = i;\n        }\n        // Hide button if there are fewer than 4 answers provided\n        if (!answers[i]) {\n            answerButton.hidden = 'true';\n        }\n        // Populate text on button\n        answerButton.innerText = decodeHtmlEntities(answers[i]);\n    }\n    // Re-enable all answer buttons\n    activateAllAnswerButtons();\n    // Disable submit button until user selects an answer\n    submitButton.classList.add('disabled');\n    // Change submit button to finish on last question\n    if (questionCount === MAX_QUESTION_NUM - 1) {\n        submitButton.innerText = 'Finish';\n    }\n    return correctAnswerIdx;\n};\n\n// Function to restart quiz, from score page\nexport const restartQuiz = () => {\n    // Populate content to display the tutorial\n    submitButton.innerText = 'Start';\n    heading.innerText = 'How to play';\n    resultsSection.classList.add('hidden');\n    tutorialSection.classList.remove('hidden');\n};"],"names":["$parcel$interopDefault","a","__esModule","default","$0549f5aaef62b2d2$export$d675b3969e4857cb","document","getElementById","$0549f5aaef62b2d2$export$c11717e3f1c52cf6","$0549f5aaef62b2d2$export$b4bb76d1f78cbcea","$0549f5aaef62b2d2$export$16cdf0d7feb4a0fd","$0549f5aaef62b2d2$export$46e4a324ac90507f","$73936c209f170d43$export$7f972a3e1c55592f","difficulty","difficultyUrlParam","localStorage","setItem","Date","result","fetch","json","error","alert","console","$7d390c0492ceea3f$exports","JSON","parse","$08fa37fff71de28c$export$5cfeaa4af6841c8f","str","parser","DOMParser","parseFromString","body","textContent","$08fa37fff71de28c$export$448332262467e042","array","i","length","j","Math","floor","random","$08fa37fff71de28c$export$1839ba460459a826","string","toUpperCase","slice","$221d103b0f3fc88a$export$e36ea31c04f6f4c9","tag","innerText","siteTitle","getElementsByTagName","name","content","author","description","keywords","li","createElement","tutorialSteps","appendChild","button","setAttribute","difficulties","classList","add","$221d103b0f3fc88a$export$af068a137c14e57e","$221d103b0f3fc88a$export$855675447ae9024f","remove","$221d103b0f3fc88a$export$7411639aeb86346d","symbol","getElementsByClassName","src","title","$221d103b0f3fc88a$export$678377686716f801","$221d103b0f3fc88a$export$bfa134de10c25d69","selectedDifficultyIdx","$6318dfeb70c9f1eb$export$35dfb1dce4536b10","data","$6318dfeb70c9f1eb$export$85787429b4cb5fd8","score","$6318dfeb70c9f1eb$export$12698bc319dcbbdd","questionCount","questionObject","results","questionText","question","answers","incorrect_answers","correct_answer","correctAnswerIdx","answerButton","hidden","$6318dfeb70c9f1eb$export$5d3d46fe3c6e86c0","$63eb283d27decb4d$var$data","$63eb283d27decb4d$var$questionCount","$63eb283d27decb4d$var$score","$63eb283d27decb4d$var$correctAnswerIdx","$63eb283d27decb4d$var$difficulty","addEventListener","msSinceLastFetch","getItem","setTimeout","contains","selectedAnswer","difficultyOption","toLowerCase"],"version":3,"file":"index.6fdf7624.js.map"}